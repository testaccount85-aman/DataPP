version: "3.9"

services:
  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  milvus:
    image: milvusdb/milvus:2.4.3
    container_name: milvus-standalone
    ports:
      - "19530:19530"
    environment:
      - MILVUS_LOG_LEVEL=info
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    image: apache/airflow:2.9.3
    depends_on:
      airflow-postgres:
        condition: service_healthy
    env_file: airflow.docker.env
    volumes:
      - ./src/pipeline/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        airflow db init && \
        airflow users create --role Admin --username admin --password admin --firstname Data --lastname Engineer --email admin@example.com

  airflow-webserver:
    image: apache/airflow:2.9.3
    depends_on:
      airflow-postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file: airflow.docker.env
    volumes:
      - ./src/pipeline/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.9.3
    depends_on:
      airflow-postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file: airflow.docker.env
    volumes:
      - ./src/pipeline/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
    command: scheduler

  airflow-triggerer:
    image: apache/airflow:2.9.3
    depends_on:
      airflow-postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file: airflow.docker.env
    volumes:
      - ./src/pipeline/dags:/opt/airflow/dags
    command: triggerer

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.api
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      milvus:
        condition: service_started
    environment:
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB: personalization
      MILVUS_HOST: milvus
      MILVUS_PORT: 19530
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SQLITE_PATH: /data/analytics.db
    volumes:
      - ./src:/app/src
      - ./data:/data
    ports:
      - "8000:8000"

volumes:
  mongo_data:
  neo4j_data:
  milvus_data:
  pg_data:
